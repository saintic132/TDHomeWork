{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","angle","content","name","textMessage","time","messageData","HW1","Affair","styleForLetter","affair","priority","toUpperCase","style","marginLeft","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","filter","filterClass","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","find","el","alert","HW3","setUsers","newName","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","i","hoverElement","String","newOption","SuperRadio","o","arr","HW7","href","App","id","title","collapse","component","setState","onClickCollapse","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c39cec39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__ev9ZS\",\"avatar\":\"Message_avatar__3PPTa\",\"content\":\"Message_content__2KxqR\",\"textMessage\":\"Message_textMessage__2es0U\",\"name\":\"Message_name__jdI1D\",\"time\":\"Message_time__31HII\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterClass\":\"Affairs_filterClass__2qDlB\",\"styleForLetter\":\"Affairs_styleForLetter__14nWz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1qqc0\",\"error\":\"Greeting_error__1G8vA\",\"errorMessage\":\"Greeting_errorMessage__2dmEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2PW1s\",\"errorInput\":\"SuperInputText_errorInput__iu4g6\",\"error\":\"SuperInputText_error__3t0Oa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1KWxJ\",\"column\":\"HW4_column__2tv0v\",\"testSpanError\":\"HW4_testSpanError__3ILBP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__28SKz\",\"red\":\"SuperButton_red__2l-B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2HhQ6\",\"spanClassName\":\"SuperCheckbox_spanClassName__1Y2ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2I_pk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverElement\":\"SuperSelect_hoverElement__1zXYb\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={s.message}>\n            <img src={props.avatar} alt=\"Logo\" className={s.avatar}/>\n            <div className={s.angle}>\n                <div className={s.content}>\n                    <div className={s.name}>{props.name}</div>\n                    <div className={s.textMessage}>{props.message}</div>\n                    <div className={s.time}>{props.time}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Artem',\n    message: 'npm start nazmi !!!',\n    time: '15:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n\n\n\n    return (\n        <div>\n            <span\nclassName={s.styleForLetter}\n            >{(props.affair.priority[0]).toUpperCase()}</span>\n            <span\n                style={({\n                    marginLeft: '10px',\n                })}\n            >{props.affair.name}</span>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n            {mappedAffairs}\n\n            <button onClick={setAll} className={props.filter === 'all' ? s.filterClass : ''}>All</button>\n            <button onClick={setHigh} className={props.filter === 'high' ? s.filterClass : ''}>High</button>\n            <button onClick={setMiddle} className={props.filter === 'middle' ? s.filterClass : ''}>Middle</button>\n            <button onClick={setLow} className={props.filter === 'low' ? s.filterClass : ''}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    // if (filter === 'high') return affairs.filter(t => t.priority == 'high')\n    // if (filter === 'middle') return affairs.filter(t => t.priority == 'middle')\n    // if (filter === 'low') return affairs.filter(t => t.priority == 'low')\n    // else throw new Error\n    else return affairs.filter(t => t.priority === filter)\n\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(t => t._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>> (defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string | null // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : '' // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n            <div>\n                {error && <div className={error ? s.errorMessage : ''}>{error}</div>}\n            </div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (newName: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string | null>(null) // need to fix any\n\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setError(null)\n        setName(e.currentTarget.value) // need to fix\n    }\n    const addUser = () => {\n        if (name.trim()) {\n            let doubleTask = users.find(el => el.name === name)\n            if (doubleTask) {\n                setError('This name already exists')\n            } else {\n                addUserCallback(name)\n                alert(`Hello ${name} !`)\n                setName('')\n            }\n        } else {\n            setError('Write the name ')\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (newName: string) => { // need to fix any\n        let newUser = {_id: v1(), name: newName}\n        setUsers([newUser, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n        const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = error ? s.errorInput : '' // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\nimport {log} from \"util\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = red ? s.red : s.default && className\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        // setEditMode() // выключить editMode при нажатии Enter\n        onEnter && onEnter()\n        setEditMode(false)\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n        setEditMode(false)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n            onDoubleClick && onDoubleClick(e)\n        setEditMode(true)\n    }\n\n    const spanClassName = `${'cursor: inherit;'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value', value))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport s from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] | undefined = options?.map((el, i) => {\n        return (\n            <option\n                className={restProps.value == i ? s.hoverElement : ''}\n                key={i}\n                value={String(i)}\n            >{el}</option>\n        )\n    }); // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        let newOption = e.currentTarget.value\n        if (onChangeOption && newOption) {\n            onChangeOption(newOption)\n        }\n    }\n    // onChange, onChangeOption\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        let newValue = e.currentTarget.value\n        if (onChangeOption && newValue) {\n            onChangeOption(newValue)\n        }\n        // onChange, onChangeOption\n    }\n\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                onChange={onChangeCallback}\n                name={name}\n                value={o}\n                checked={o === value}\n                {...restProps}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n                <div>\n                    <a href=\"https://github.com/saintic132/TDHomeWork/edit/master/src/p2-homeworks/h7/HW7.tsx\">Тут должна быть радио кнопка, но ее не видно(click)</a>\n                </div>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import React, {useState} from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\nimport HW6 from '../../../p2-homeworks/h6/HW6'\nimport HW7 from '../../../p2-homeworks/h7/HW7'\n\nfunction App() {\n\n    let [state, setState] = useState([\n        {id: 1, title: 'HomeWork 1' , collapse: false, component: <HW1 />},\n        {id: 2, title: 'HomeWork 2' , collapse: false, component: <HW2 />},\n        {id: 3, title: 'HomeWork 3' , collapse: false, component: <HW3 />},\n        {id: 4, title: 'HomeWork 4' , collapse: false, component: <HW4 />},\n        // {id: 5, title: 'HomeWork 5' , collapse: false, component: <HW5 />},\n        {id: 6, title: 'HomeWork 6' , collapse: false, component: <HW6 />},\n        {id: 7, title: 'HomeWork 7' , collapse: false, component: <HW7 />}\n    ]);\n\n    const onClickCollapse = (id: number) => {\n        let find = state.find(el => el.id === id)\n        if (find) {\n            find.collapse = !find.collapse\n            setState([...state])\n        }\n    }\n\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n\n            {\n                state.map(el => {\n                    return (\n                        <div>\n                            <button\n                                onClick={()=> onClickCollapse(el.id)}\n                                key={el.id}>{el.title}</button>\n                            {el.collapse && el.component}\n                        </div>\n                    )\n                })\n            }\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}